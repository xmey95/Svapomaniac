

T O D O S :

----------------------------------------
f) find duplicate files dialog
----------------------------------------
press INs   toggle select of current row und jump ++
----------------------------------------
f) http://www.dropzonejs.com/#usage
    --> copy, move  (bei isDir auch: 'change to' )
    http://www.bootply.com/9ScrFwGIzz
    http://www.aspnetzone.de/blogs/juergengutsch/archive/2014/10/21/drop-zone-per-angularjs-direktive-definieren.aspx
    http://stackoverflow.com/questions/28614980/call-function-from-angularjs-directive-for-dropzone-js

https://github.com/alexgorbatchev/node-crc
----------------------------------------
f) tool dialog ('start menu')
----------------------------------------
f) options dialog
----------------------------------------
f) focus ist weg nach copy() (alt f5)
----------------------------------------
g) wenn Tabelle gefiltert, dann sollte ein "select all" nur die gefilterte Menge selektieren
----------------------------------------
f) verzeichnis info (platzverbrauch)
----------------------------------------
f) FAVs : Pflegedialog
----------------------------------------
f) beim bulk copy() und bulk move() ein feedback bei einzelnen files schicken (progress bar)?
----------------------------------------

r) renaming:  'pseudo white space'
                -> 'sophia der tod und ich thees uhlmann.jpg'
                -> 'sophia_der_tod_und_ich_thees_uhlmann.jpg'
                -> 'sophia.der.tod.und.ich.thees.uhlmann.jpg'

dot & underscore -> space
dot & space -> underscore
underscore & space-> dot
----------------------------------------
f) merge und split files:

var loop = require("serial-loop");
var fs = require("fs");
module.exports = concat;

function concat (files, dest, callback) {
  fs.writeFile(dest, '', function (error) {
    if (error) return callback(error);
    loop(files.length, each, callback);
    function each (done, i) {
      fs.readFile(files[i], function (error, buffer) {
        if (error) return done(error);

        fs.appendFile(dest, buffer, done);
      });
    }

  });
}

function start (len, each, callback) {
  if (len == 0) return callback();

  (function loop (i) {
    each(next, i);

    function next (error) {
      if (error) return callback(error);
      if (i + 1 == len) return callback();

      loop(i + 1);
    }
  }(0));
}

-----------------------------------------

CSS Variables: Access Custom Properties with JavaScript - Broken Links
https://www.broken-links.com/2014/08/28/css-variables-updating-custom-properties-javascript/
https://developers.google.com/web/updates/2016/02/css-variables-why-should-you-care
https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables


